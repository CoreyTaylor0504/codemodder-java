package com.acme.testcode;

import java.net.MalformedURLException;
import java.net.URL;

final class SSRFVulnerabilityWeaved {

  URL doesUrlStuff(String s, URL other) throws Exception {
    io.pixee.security.SSRF.createSafeURL(s, io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS).openConnection();
    try {
      io.pixee.security.SSRF.createSafeURL(s, io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS);
    } catch (MalformedURLException e) {
    }

    URL foo1 = io.pixee.security.SSRF.createSafeURL(s, "host", 80, "path", io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS);

    URL foo2 = io.pixee.security.SSRF.createSafeURL(s, "host", 80, "path", null, io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS);

    URL foo3 = io.pixee.security.SSRF.createSafeURL(s, "host", "path", io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS);

    URL foo4 = io.pixee.security.SSRF.createSafeURL(io.pixee.security.SSRF.createSafeURL(s, io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS), getSpec(), io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS);

    URL foo5 = new URL("constant", "constant", 80, null);

    URL foo6 = new URL("http://constant");

    return io.pixee.security.SSRF.createSafeURL(foo1, getSpec(), null, io.pixee.security.SSRF.HTTP_PROTOCOLS, io.pixee.security.HostValidator.DENY_COMMON_INFRASTRUCTURE_TARGETS);
  }

  private String getSpec() {
    return "zxc";
  }
}
